{"version":3,"sources":["components/ButtonPrint.js","components/ButtonDownload.js","components/DonutChart.js","components/BarChart.js","components/SchoolInfo.js","utils/API.js","App.js","index.js"],"names":["ButtonPrint","react_default","a","createElement","className","onClick","window","print","title","class","ButtonDownload","props","handleDownload","obj","DonutChart","chartData","dataDoughnut","labels","datasets","data","backgroundColor","BGColor","hoverBackgroundColor","HBGColor","chartTitle","es","options","responsive","BarChart","dataBar","label","borderWidth","borderColor","barChartOptions","maintainAspectRatio","scales","xAxes","barPercentage","gridLines","display","color","yAxes","ticks","beginAtZero","SchoolInfo","name","stuTotal","city","state","zip","website","API","search","query","axios","get","ref","React","createRef","orientation","unit","format","ethLabels","ethBGColor","ethHBGColor","proBGColor","proHBGColor","Program_Percentages","proData","proLabels","Tuition","tuiData","tuiLabels","Race_Ethnicity","dlObj","App","school","enrollment","ethnicity","latest","ethArray","proObj","tuition","returned","getInfo","then","res","_this","setState","results","student","all","demographics","race_ethnicity","concat","aian","asian","black","hispanic","nhpi","non_resident_alien","two_or_more","unknown","white","academics","program_percentage","cost","catch","err","console","log","object","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","type","document","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","clean","propName","undefined","parseFloat","regex","array","i","length","toString","replace","this","_this2","Object","values","keys","forEach","key","school_url","program_percentages","components_SchoolInfo","mdbreact_esm","components_DonutChart","components_BarChart","components_ButtonPrint","components_ButtonDownload","react_to_pdf_default","targetRef","filename","x","y","_ref","toPdf","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.51b9204c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ButtonPrint(){\r\n    return(\r\n        <div className=\"col-4\">\r\n            <button className=\"btn btn-outline-blue-grey waves-effect\" onClick={() => window.print()}><span title=\"Print\"><i class=\"fas fa-print\"></i></span></button>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default ButtonPrint;","import React from 'react';\r\n\r\nfunction ButtonDownload(props){\r\n\r\n    return(\r\n        <div className=\"col-4\">\r\n\r\n            <button className=\"btn btn-outline-success waves-effect\" onClick={() => props.handleDownload(props.obj)}><span title=\"Download Data\"><i class=\"fas fa-download\"></i></span></button>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default ButtonDownload;","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction DonutChart(props){\r\n    var chartData = {\r\n    dataDoughnut: {\r\n        labels: props.labels,\r\n        datasets: [\r\n            {\r\n                data: props.data,\r\n                backgroundColor: props.BGColor,\r\n                hoverBackgroundColor: props.HBGColor\r\n            }\r\n            ]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h3 className=\"mt-5\">{props.chartTitle}</h3>\r\n            <Doughnut data={chartData.dataDoughnut} options={{ responsive: true }} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DonutChart;","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nfunction BarChart(props){\r\n    var chartData = {\r\n        dataBar: {\r\n            labels: props.labels,\r\n            datasets: [\r\n              {\r\n                label: props.label,\r\n                data: props.data,\r\n                backgroundColor: [\r\n                  \"rgba(255, 134,159,0.4)\",\r\n                  \"rgba(98,  182, 239,0.4)\"\r\n                ],\r\n                borderWidth: 2,\r\n                borderColor: [\r\n                  \"rgba(255, 134, 159, 1)\",\r\n                  \"rgba(98,  182, 239, 1)\"\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          barChartOptions: {\r\n            responsive: true,\r\n            maintainAspectRatio: true,\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  barPercentage: 1,\r\n                  gridLines: {\r\n                    display: true,\r\n                    color: \"rgba(0, 0, 0, 0.1)\"\r\n                  }\r\n                }\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: true,\r\n                    color: \"rgba(0, 0, 0, 0.1)\"\r\n                  },\r\n                  ticks: {\r\n                    beginAtZero: true\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h3 className=\"mt-5\">{props.chartTitle}</h3>\r\n            <Bar data={chartData.dataBar} options={chartData.barChartOptions} />\r\n        </div>\r\n    );\r\n}\r\nexport default BarChart;","import React from 'react';\r\n\r\nfunction SchoolInfo(props){\r\n    return(\r\n\r\n        <div className=\"row text-center\">\r\n            <div className=\"col-12 mb-4\">\r\n                <div className=\"card card-image\">\r\n                    <div className=\"text-white text-center align-items-center rgba-black-strong py-5 px-4\">\r\n                        <div>\r\n                            <h1 className=\"card-title py-3 font-weight-bold\"><strong>{props.name}</strong></h1>\r\n                            <h3 className=\"pb-3\"><strong>Current Enrollment:</strong> {props.stuTotal}</h3>\r\n                            <h3 className=\"pb-3\"><strong>Location:</strong> {props.city + \", \" + props.state + \" \" + props.zip}</h3>\r\n                            <h3 className=\"pb-3\"><strong>Website:</strong> {props.website}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SchoolInfo;","import axios from \"axios\";\r\n\r\nconst BASEURL = \"https://api.data.gov/ed/collegescorecard/v1/schools/?school.operating=1&2015.academics.program_available.assoc_or_bachelors=true&2015.student.size__range=1..&school.degrees_awarded.predominant__range=1..3&school.degrees_awarded.highest__range=2..4&id=240444&api_key=\";\r\nconst APIKEY = \"guDWfas33s4yfX4wQKXef91fKWZ5jayKS1CCD5w3\";\r\n\r\nexport default {\r\n    search: function(query) {\r\n      return axios.get(BASEURL + query + APIKEY);\r\n    }\r\n};","import React, { Component } from \"react\";\nimport { MDBContainer } from \"mdbreact\";\nimport ButtonPrint from \"./components/ButtonPrint\";\nimport ButtonDownload from \"./components/ButtonDownload\";\nimport DonutChart from \"./components/DonutChart\";\nimport BarChart from \"./components/BarChart\";\nimport SchoolInfo from \"./components/SchoolInfo\";\nimport API from \"./utils/API\";\nimport './App.css';\nimport Pdf from \"react-to-pdf\";\n\nconst ref = React.createRef();\n//option set for the pdf downloader\nconst options = {\n  orientation: 'portrait',\n  unit: 'in',\n  format: [2400,1750]\n};\n//variables for the donut charts\nconst ethLabels = [\"AIAN\", \"Asian\", \"Black\", \"Hispanic\", \"NHPI\", \"Non-Resident Alien\", \"Two or More\", \"Unknown\", \"White\"];\nconst ethBGColor = [\"#E081A2\",\"#BD8FBE\",\"#8C9ECA\",\"#56A9C0\",\"#3BAFA5\",\"#54AF81\",\"#7CAB5E\",\"#A4A248\",\"#C89548\"];\nconst ethHBGColor =[\"#BC6A5A\",\"#B5687A\",\"#967193\",\"#687D9B\",\"#3E848C\",\"#3A856D\",\"#58814C\",\"#797836\",\"#966B36\"];\nconst proBGColor = [\"#EE8874\",\"#E8817F\",\"#DE7D8A\",\"#D17B93\",\"#C17B9A\",\"#AE7B9F\",\"#997CA1\",\"#837DA0\",\"#6D7C9C\",\"#597B94\",\"#467A8A\",\"#37777E\",\"#2E7371\",\"#2C6F63\",\"#2E6A55\",\"#346547\",\"#3A5F3B\",\"#405930\",\"#455327\",\"#494C20\",\"#4D451C\",\"#4F3E19\",\"#4F3819\",\"#4F311A\",\"#4C2C1C\"];\nconst proHBGColor = [\"#3A1D19\",\"#412021\",\"#47242A\",\"#4B2934\",\"#4D2F3E\",\"#4D3648\",\"#4B3D51\",\"#47455A\",\"#414D61\",\"#3B5566\",\"#335D69\",\"#2D646A\",\"#2A6B69\",\"#2D7266\",\"#357861\",\"#427E5A\",\"#518354\",\"#61874D\",\"#748B47\",\"#878E42\",\"#9B9041\",\"#AF9143\",\"#C39149\",\"#D69153\",\"#E89061\"];\nlet Program_Percentages = {}\nlet   proData = [];\nlet   proLabels = [];\nlet Tuition = {}\nlet   tuiData = [];\nlet   tuiLabels = [];\nlet Race_Ethnicity = {};\nlet   dlObj = {};\n\nclass App extends Component {\n  //where relevant data will be stored\n  state = {\n    school: {},\n    enrollment:\"\",\n    ethnicity: {},\n    latest: {},\n    ethArray: [],\n    proObj: {},\n    tuition: {},\n    returned: false\n  };\n\n  //once page is loaded and the app mounts, run the function to search and save the data\n  componentDidMount() {\n    this.getInfo(\"\");\n\n  }\n\n  //function that searches for the API data and saves it\n  getInfo = query => {\n    //Api search to grab the data for the webpage\n    API.search(query)\n\n    //save the data searched in the state object\n    .then(res => \n      this.setState({ \n        school: res.data.results[0].school, \n        enrollment: res.data.results[0].latest.student.enrollment.all,\n        ethnicity: res.data.results[0].latest.student.demographics.race_ethnicity,\n        latest: res.data.results[0].latest,\n        ethArray: this.state.ethArray.concat([\n          res.data.results[0].latest.student.demographics.race_ethnicity.aian,\n          res.data.results[0].latest.student.demographics.race_ethnicity.asian,\n          res.data.results[0].latest.student.demographics.race_ethnicity.black,\n          res.data.results[0].latest.student.demographics.race_ethnicity.hispanic,\n          res.data.results[0].latest.student.demographics.race_ethnicity.nhpi,\n          res.data.results[0].latest.student.demographics.race_ethnicity.non_resident_alien,\n          res.data.results[0].latest.student.demographics.race_ethnicity.two_or_more,\n          res.data.results[0].latest.student.demographics.race_ethnicity.unknown,\n          res.data.results[0].latest.student.demographics.race_ethnicity.white\n        ]),\n        proObj: res.data.results[0].latest.academics.program_percentage, \n        tuition: res.data.results[0].latest.cost.tuition,\n        returned: true \n      })\n    )\n    .catch(err => console.log(err));\n  };\n\n  //onclick funtion for the download button which takes the used data\n  //on the page and downloads it as a JSON file\n  handleDownload = (object) => {\n      let filename = \"ea-assessment.json\";\n      let contentType = \"application/json;charset=utf-8;\";\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n        var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(object)))], { type: contentType });\n        navigator.msSaveOrOpenBlob(blob, filename);\n      } else {\n        var a = document.createElement('a');\n        a.download = filename;\n        a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(object));\n        a.target = '_blank';\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      }\n  };\n\n\n\n  //function that removes nulls, undefineds, and 0 from object datasets\n  clean = obj => {\n    for (var propName in obj) { \n      if (obj[propName] === null || obj[propName] === undefined || obj[propName] === parseFloat(0)) {\n        delete obj[propName];\n      }\n    }\n  }\n\n  //removes underscores from strings in an array and replaces it with a space\n  regex = array => {\n    for (var i = 0; i < array.length; i++) {\n      array[i] = array[i].toString().replace(/_/g, \" \");\n    };\n  }\n\n  render() {\n    //removes nulls, undefineds and 0's from program percentage object\n    Program_Percentages = this.state.proObj;\n    this.clean(Program_Percentages);\n    //set proData and proLabels from objects into arrays that can be used in donut chart\n    proData = Object.values(Program_Percentages);\n    proLabels = Object.keys(Program_Percentages);\n    this.regex(proLabels);\n    \n    // Do the same for tuition data as the program percentage data\n    Tuition = this.state.tuition;\n    this.clean(Tuition);\n    tuiData = Object.values(Tuition);\n    tuiLabels = Object.keys(Tuition);\n    this.regex(tuiLabels);\n\n    //bring arrays back together into an object for the download object\n    ethLabels.forEach((key, i) => Race_Ethnicity[key] = this.state.ethArray[i]);\n\n    //create the download object\n    dlObj = {\n      school: this.state.school.name,\n      enrollment: this.state.enrollment,\n      city: this.state.school.city,\n      state: this.state.school.state,\n      zip: this.state.school.zip,\n      website: this.state.school.school_url,\n      program_percentages: Program_Percentages,\n      race_ethnicity: Race_Ethnicity,\n      tuition: Tuition,\n    }\n\n    return (\n      <div className=\"container mainWrapper\" ref = {ref}>\n        <SchoolInfo \n        name={this.state.school.name}\n        stuTotal={this.state.enrollment}\n        city={this.state.school.city}\n        state={this.state.school.state}\n        zip={this.state.school.zip}\n        website={this.state.school.school_url}\n        />\n        <MDBContainer>\n          <DonutChart \n          chartTitle= \"Program Percentages\"\n          data = {proData}\n          labels={proLabels}\n          BGColor={proBGColor}\n          HBGColor={proHBGColor}\n          />\n        </MDBContainer>\n        <MDBContainer>\n          <DonutChart \n          chartTitle= \"Race/Ethnicity\"\n          data = {this.state.ethArray}\n          labels={ethLabels}\n          BGColor={ethBGColor}\n          HBGColor={ethHBGColor}\n          />\n        </MDBContainer>\n        <MDBContainer>\n          <BarChart \n          chartTitle= \"In-state vs Out-of-state Tuition Cost\"\n          data= {tuiData}\n          labels= {tuiLabels}\n          label= \"Dollars per Academic Year\"\n\n          />\n        </MDBContainer>\n        <div className=\"row text-center py-5\">\n          <ButtonPrint />\n          <ButtonDownload \n            handleDownload = {this.handleDownload}\n            obj = {dlObj}\n          />\n          <div className=\"col-4\">\n            <Pdf  targetRef={ref} filename=\"ea-assessment.pdf\" options={options} x={0.5} y={0.5}>\n              {({ toPdf }) => <button className=\"btn btn-outline-danger waves-effect\" onClick={toPdf}><span title=\"Save as PDF\"><i class=\"far fa-file-pdf\"></i></span></button>}\n            </Pdf>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\"\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}