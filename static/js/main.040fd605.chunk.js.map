{"version":3,"sources":["components/ButtonRow.js","components/DonutChart.js","components/SchoolInfo.js","utils/API.js","App.js","index.js"],"names":["ButtonRow","props","react_default","a","createElement","className","onClick","window","print","DonutChart","chartData","dataDoughnut","labels","datasets","data","backgroundColor","BGColor","hoverBackgroundColor","HBGColor","chartTitle","es","options","responsive","SchoolInfo","name","stuTotal","website","city","state","zip","API","search","query","axios","get","ethLabels","ethBGColor","ethHBGColor","proBGColor","proHBGColor","proData","proLabels","cleanObj","ref","React","createRef","orientation","unit","format","App","school","enrollment","ethnicity","latest","ethArray","proObj","returned","getInfo","then","res","_this","setState","results","student","all","demographics","race_ethnicity","concat","aian","asian","black","hispanic","nhpi","non_resident_alien","two_or_more","unknown","white","academics","program_percentage","catch","err","console","log","clean","obj","propName","undefined","parseFloat","this","Object","values","keys","components_SchoolInfo","school_url","mdbreact_esm","components_DonutChart","components_ButtonRow","savePDF","react_to_pdf_default","targetRef","filename","x","y","_ref","toPdf","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"wSAiBeA,MAff,SAAmBC,GACf,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,IAAlB,aAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,GAAGC,QAAS,kBAAMC,OAAOC,UAA3C,oBCcDC,MAtBf,SAAoBR,GAChB,IAAIS,EAAY,CAChBC,aAAc,CACVC,OAAQX,EAAMW,OACdC,SAAU,CACN,CACIC,KAAMb,EAAMa,KACZC,gBAAiBd,EAAMe,QACvBC,qBAAsBhB,EAAMiB,aAMxC,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQJ,EAAMkB,YAC5BjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAUN,KAAMJ,EAAUC,aAAcU,QAAS,CAAEC,YAAY,OCM5DC,MAxBf,SAAoBtB,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEXH,EAAAC,EAAAC,cAAA,UACKH,EAAMuB,MAGXtB,EAAAC,EAAAC,cAAA,UACKH,EAAMwB,UAGXvB,EAAAC,EAAAC,cAAA,UACKH,EAAMyB,SAGXxB,EAAAC,EAAAC,cAAA,UACKH,EAAM0B,KAAO,KAAO1B,EAAM2B,MAAQ,IAAM3B,EAAM4B,yBCdhDC,EAAA,CACXC,OAAQ,SAASC,GACf,OAAOC,IAAMC,IALH,6QAKiBF,EAJlB,yECSTG,EAAY,CAAC,OAAQ,QAAS,QAAS,WAAY,OAAQ,qBAAsB,cAAe,UAAW,SAC3GC,EAAa,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAC9FC,EAAa,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAC9FC,EAAa,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAC9PC,EAAc,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAC/PC,EAAU,GACVC,EAAY,GAEZC,EAAW,GACXC,EAAMC,IAAMC,YAEZxB,EAAU,CACdyB,YAAa,WACbC,KAAM,KACNC,OAAQ,CAAC,KAAK,OAgHDC,6MA1GbrB,MAAQ,CACNsB,OAAQ,GACRC,WAAW,GACXC,UAAW,GACXC,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRC,UAAU,KAUZC,QAAU,SAAAzB,GAERF,EAAIC,OAAOC,GAGV0B,KAAK,SAAAC,GAAG,OACPC,EAAKC,SAAS,CACZX,OAAQS,EAAI7C,KAAKgD,QAAQ,GAAGZ,OAC5BC,WAAYQ,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOU,QAAQZ,WAAWa,IAC1DZ,UAAWO,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOU,QAAQE,aAAaC,eAC3Db,OAAQM,EAAI7C,KAAKgD,QAAQ,GAAGT,OAC5BC,SAAUM,EAAKhC,MAAM0B,SAASa,OAAO,CACnCR,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOU,QAAQE,aAAaC,eAAeE,KAC/DT,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOU,QAAQE,aAAaC,eAAeG,MAC/DV,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOU,QAAQE,aAAaC,eAAeI,MAC/DX,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOU,QAAQE,aAAaC,eAAeK,SAC/DZ,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOU,QAAQE,aAAaC,eAAeM,KAC/Db,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOU,QAAQE,aAAaC,eAAeO,mBAC/Dd,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOU,QAAQE,aAAaC,eAAeQ,YAC/Df,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOU,QAAQE,aAAaC,eAAeS,QAC/DhB,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOU,QAAQE,aAAaC,eAAeU,QAEjErB,OAAQI,EAAI7C,KAAKgD,QAAQ,GAAGT,OAAOwB,UAAUC,mBAC7CtB,UAAU,MAGbuB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI5BG,MAAQ,SAAAC,GACN,IAAK,IAAIC,KAAYD,EACG,OAAlBA,EAAIC,SAAwCC,IAAlBF,EAAIC,IAA2BD,EAAIC,KAAcE,WAAW,WACjFH,EAAIC,uFAtCfG,KAAK/B,QAAQ,qCAmDb,OANAf,EAAW8C,KAAK5D,MAAM2B,OACtBiC,KAAKL,MAAMzC,GAEXF,EAAUiD,OAAOC,OAAOhD,GACxBD,EAAYgD,OAAOE,KAAKjD,GAGtBxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYsC,IAAOA,GAChCzC,EAAAC,EAAAC,cAACwF,EAAD,CACApE,KAAMgE,KAAK5D,MAAMsB,OAAO1B,KACxBC,SAAU+D,KAAK5D,MAAMuB,WACrBxB,KAAM6D,KAAK5D,MAAMsB,OAAOvB,KACxBC,MAAO4D,KAAK5D,MAAMsB,OAAOtB,MACzBC,IAAK2D,KAAK5D,MAAMsB,OAAOrB,IACvBH,QAAS8D,KAAK5D,MAAMsB,OAAO2C,aAE3B3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACE5F,EAAAC,EAAAC,cAAC2F,EAAD,CACA5E,WAAY,sBACZL,KAAQ0B,EACR5B,OAAQ6B,EACRzB,QAASsB,EACTpB,SAAUqB,KAGZrC,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACE5F,EAAAC,EAAAC,cAAC2F,EAAD,CACA5E,WAAY,iBACZL,KAAQ0E,KAAK5D,MAAM0B,SACnB1C,OAAQuB,EACRnB,QAASoB,EACTlB,SAAUmB,KAGZnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAC4F,EAAD,CACAC,QAAST,KAAKS,UAEd/F,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,CAAKE,UAAU,QAAQ8F,UAAWxD,EAAKyD,SAAS,oBAAoB/E,QAASA,EAASgF,EAAG,GAAKC,EAAG,IAC9F,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OAAetG,EAAAC,EAAAC,cAAA,UAAQE,QAASkG,GAAjB,0BAlGVC,aCtBlBC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.040fd605.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ButtonRow(props){\r\n    return(\r\n        <div className=\"col-8\">\r\n\r\n            <div className=\"col-4\">\r\n                <button className=\"\">Download</button>\r\n            </div>\r\n\r\n            <div className=\"col-4\">\r\n                <button className=\"\" onClick={() => window.print()}>Print</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default ButtonRow;","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction DonutChart(props){\r\n    var chartData = {\r\n    dataDoughnut: {\r\n        labels: props.labels,\r\n        datasets: [\r\n            {\r\n                data: props.data,\r\n                backgroundColor: props.BGColor,\r\n                hoverBackgroundColor: props.HBGColor\r\n            }\r\n            ]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h3 className=\"mt-5\">{props.chartTitle}</h3>\r\n            <Doughnut data={chartData.dataDoughnut} options={{ responsive: true }} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DonutChart;","import React from 'react';\r\n\r\nfunction SchoolInfo(props){\r\n    return(\r\n        <div className=\"text-center\">\r\n\r\n            <h1>\r\n                {props.name}\r\n            </h1>\r\n\r\n            <h2>\r\n                {props.stuTotal}\r\n            </h2>\r\n\r\n            <h2>\r\n                {props.website}\r\n            </h2>\r\n\r\n            <h3>\r\n                {props.city + \", \" + props.state + \" \" + props.zip}\r\n            </h3>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SchoolInfo;","import axios from \"axios\";\r\n\r\nconst BASEURL = \"https://api.data.gov/ed/collegescorecard/v1/schools/?school.operating=1&2015.academics.program_available.assoc_or_bachelors=true&2015.student.size__range=1..&school.degrees_awarded.predominant__range=1..3&school.degrees_awarded.highest__range=2..4&id=240444&api_key=\";\r\nconst APIKEY = \"guDWfas33s4yfX4wQKXef91fKWZ5jayKS1CCD5w3\";\r\n\r\nexport default {\r\n    search: function(query) {\r\n      return axios.get(BASEURL + query + APIKEY);\r\n    }\r\n};","import React, { Component } from \"react\";\nimport { MDBContainer } from \"mdbreact\";\nimport ButtonRow from \"./components/ButtonRow\";\nimport DonutChart from \"./components/DonutChart\";\n// import Graph from \"./components/Graph\";\nimport SchoolInfo from \"./components/SchoolInfo\";\nimport API from \"./utils/API\";\n// import jsPDF from 'jspdf';\nimport './App.css';\nimport Pdf from \"react-to-pdf\";\n\n//variables for the donut charts\nconst ethLabels = [\"AIAN\", \"Asian\", \"Black\", \"Hispanic\", \"NHPI\", \"Non-Resident Alien\", \"Two or More\", \"Unknown\", \"White\"];\nconst ethBGColor = [\"#E081A2\",\"#BD8FBE\",\"#8C9ECA\",\"#56A9C0\",\"#3BAFA5\",\"#54AF81\",\"#7CAB5E\",\"#A4A248\",\"#C89548\"];\nconst ethHBGColor =[\"#BC6A5A\",\"#B5687A\",\"#967193\",\"#687D9B\",\"#3E848C\",\"#3A856D\",\"#58814C\",\"#797836\",\"#966B36\"];\nconst proBGColor = [\"#EE8874\",\"#E8817F\",\"#DE7D8A\",\"#D17B93\",\"#C17B9A\",\"#AE7B9F\",\"#997CA1\",\"#837DA0\",\"#6D7C9C\",\"#597B94\",\"#467A8A\",\"#37777E\",\"#2E7371\",\"#2C6F63\",\"#2E6A55\",\"#346547\",\"#3A5F3B\",\"#405930\",\"#455327\",\"#494C20\",\"#4D451C\",\"#4F3E19\",\"#4F3819\",\"#4F311A\",\"#4C2C1C\"];\nconst proHBGColor = [\"#3A1D19\",\"#412021\",\"#47242A\",\"#4B2934\",\"#4D2F3E\",\"#4D3648\",\"#4B3D51\",\"#47455A\",\"#414D61\",\"#3B5566\",\"#335D69\",\"#2D646A\",\"#2A6B69\",\"#2D7266\",\"#357861\",\"#427E5A\",\"#518354\",\"#61874D\",\"#748B47\",\"#878E42\",\"#9B9041\",\"#AF9143\",\"#C39149\",\"#D69153\",\"#E89061\"];\nlet   proData = [];\nlet   proLabels = [];\n//obj for cleaning out null, undefined or 0 variables from datasets\nlet   cleanObj = {};\nconst ref = React.createRef();\n//option set for the pdf downloader\nconst options = {\n  orientation: 'portrait',\n  unit: 'in',\n  format: [1600,1150]\n};\n\n\nclass App extends Component {\n  //where relevant data will be stored\n  state = {\n    school: {},\n    enrollment:\"\",\n    ethnicity: {},\n    latest: {},\n    ethArray: [],\n    proObj: {},\n    returned: false\n  };\n  //once page is loaded and the app mounts, run the function to search and save the data\n\n  componentDidMount() {\n    this.getInfo(\"\");\n\n  }\n\n  //function that searches for the API data and saves it\n  getInfo = query => {\n    //Api search to grab the data for the webpage\n    API.search(query)\n\n    //save the data searched in the state object\n    .then(res => \n      this.setState({ \n        school: res.data.results[0].school, \n        enrollment: res.data.results[0].latest.student.enrollment.all,\n        ethnicity: res.data.results[0].latest.student.demographics.race_ethnicity,\n        latest: res.data.results[0].latest,\n        ethArray: this.state.ethArray.concat([\n          res.data.results[0].latest.student.demographics.race_ethnicity.aian,\n          res.data.results[0].latest.student.demographics.race_ethnicity.asian,\n          res.data.results[0].latest.student.demographics.race_ethnicity.black,\n          res.data.results[0].latest.student.demographics.race_ethnicity.hispanic,\n          res.data.results[0].latest.student.demographics.race_ethnicity.nhpi,\n          res.data.results[0].latest.student.demographics.race_ethnicity.non_resident_alien,\n          res.data.results[0].latest.student.demographics.race_ethnicity.two_or_more,\n          res.data.results[0].latest.student.demographics.race_ethnicity.unknown,\n          res.data.results[0].latest.student.demographics.race_ethnicity.white\n        ]),\n        proObj: res.data.results[0].latest.academics.program_percentage, \n        returned: true \n      })\n    )\n    .catch(err => console.log(err));\n  };\n\n  //function that removes nulls, undefineds, and 0 from object datasets\n  clean = obj => {\n    for (var propName in obj) { \n      if (obj[propName] === null || obj[propName] === undefined || obj[propName] === parseFloat(0)) {\n        delete obj[propName];\n      }\n    }\n  }\n\n  render() {\n    //removes nulls, undefineds and 0's from program percentage object\n    cleanObj = this.state.proObj;\n    this.clean(cleanObj);\n    //set proData and proLabels from objects into arrays that can be used in donut chart\n    proData = Object.values(cleanObj);\n    proLabels = Object.keys(cleanObj);\n\n    return (\n      <div className=\"container\" ref = {ref}>\n        <SchoolInfo \n        name={this.state.school.name}\n        stuTotal={this.state.enrollment}\n        city={this.state.school.city}\n        state={this.state.school.state}\n        zip={this.state.school.zip}\n        website={this.state.school.school_url}\n        />\n        <MDBContainer>\n          <DonutChart \n          chartTitle= \"Program Percentages\"\n          data = {proData}\n          labels={proLabels}\n          BGColor={proBGColor}\n          HBGColor={proHBGColor}\n          />\n        </MDBContainer>\n        <MDBContainer>\n          <DonutChart \n          chartTitle= \"Race/Ethnicity\"\n          data = {this.state.ethArray}\n          labels={ethLabels}\n          BGColor={ethBGColor}\n          HBGColor={ethHBGColor}\n          />\n        </MDBContainer>\n        <div className=\"row text-center\">\n          <ButtonRow \n          savePDF={this.savePDF}\n          />\n          <Pdf className=\"col-4\" targetRef={ref} filename=\"ea-assessment.pdf\" options={options} x={0.5} y={0.5}>\n            {({ toPdf }) => <button onClick={toPdf}>Save as Pdf</button>}\n          </Pdf>\n        </div>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\"\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}